documentation_complete: false
schema_version: 3.1.0
name: Docker Trusted Registry
references:
  - name: Docker Trusted Registry Documentation
    path: https://docs.docker.com/docker-trusted-registry/
    type: URL
satisfies: 
  - control_key: AC-2 (1)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
      - configured by customer
    narrative:
      - text: |
          'Documentation for managing users, organizations and teams in Docker
          Trusted Registry can be found at
          https://docs.docker.com/datacenter/dtr/2.1/guides/user-management/create-and-manage-users/,
          at
          https://docs.docker.com/datacenter/dtr/2.1/guides/user-management/create-and-manage-orgs/,
          and at
          https://docs.docker.com/datacenter/dtr/2.1/guides/user-management/create-and-manage-teams/
          respectively.'
    standard_key: NIST-800-53

  - control_key: AC-2 (7)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - key: a
        text: |
          'The permission levels assignable to users and teams managed by Docker Trusted Registry are documented at https://docs.docker.com/datacenter/dtr/2.1/guides/user-management/permission-levels/'.
    standard_key: NIST-800-53

  - control_key: AC-2 (12)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
      - configured by customer
    narrative:
      - text: |
          'Docker Trusted Registry can be monitored by following the
          documentation at
          https://docs.docker.com/datacenter/dtr/2.1/guides/monitor-troubleshoot/.'
    standard_key: NIST-800-53

  - control_key: AC-4
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          'The Docker Trusted Registry system architecture can be found at
          https://docs.docker.com/datacenter/dtr/2.1/guides/architecture/.
          Information specific to container networking within DTR can be found
          at
          https://docs.docker.com/datacenter/dtr/2.1/guides/architecture/#/networks.
          The ports used by DTR for communication are documented at
          https://docs.docker.com/datacenter/dtr/2.0/install/system-requirements/#/ports-used.'
    standard_key: NIST-800-53
  
  - control_key: AC-4 (21)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          'The Docker Trusted Registry system architecture can be found at
          https://docs.docker.com/datacenter/dtr/2.1/guides/architecture/.
          Information specific to container networking within DTR can be found
          at
          https://docs.docker.com/datacenter/dtr/2.1/guides/architecture/#/networks.
          The ports used by DTR for communication are documented at
          https://docs.docker.com/datacenter/dtr/2.0/install/system-requirements/#/ports-used.'
    standard_key: NIST-800-53

  - control_key: AC-17 (2)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          All remote access sessions to Docker Trusted Registry are protected
          with Transport Layer Security (TLS) 1.2. This is included at both the
          HTTPS application layer for access to the DTR user interface and for
          command-line based connections to the registry. In addition to this,
          all communication to DTR is enforced by way of two-way mutual TLS
          authentication.
    standard_key: NIST-800-53
  
  - control_key: AC-17 (3)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          A combination of managed load balancers, firewalls and access control
          lists, and virtual networking resources can be used to ensure traffic
          destined for Docker Trusted Registry is routed through managed network
          access control points.
    standard_key: NIST-800-53

  - control_key: AC-17 (9)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - configured by customer
    narrative:
      - text: |
          Built-in firewall technology in Docker Trusted Registry's underlying
          operating system can be used to force the disconnection of remote
          connections to the host. In addition, UCP slave nodes running Docker
          Trusted Registry replicas can be paused or drained, which subsequently
          stops sessions to the DTR replica.
    standard_key: NIST-800-53

  - control_key: AU-2
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - key: a
        text: |
          All of the event types indicated by this control are logged by a
          combination of the backend ucp-controller service within Universal
          Control Plane and the backend services that make up Docker Trusted
          Registry. Instructions for viewing this data can be found at
          https://docs.docker.com/datacenter/dtr/2.0/monitor-troubleshoot/.
    standard_key: NIST-800-53

  - control_key: AU-3
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          'Universal Control Plane generates all of the audit record information
          indicated by this control. A sample audit event has been provided
          below:

          {"level":"info","license_key":"123456789123456789123456789","msg":"eNZi:Password
          based auth
          suceeded","remote_addr":"192.168.33.1:55905","time":"2016-11-09T22:41:01Z","type":"auth
          ok","username":"dockeruser"}'
    standard_key: NIST-800-53
  
  - control_key: AU-3 (1)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          Universal Control Plane can be configured to log data to a remote
          logging stack, which in turn, sends the Docker Trusted Registry
          backend container audit records to the remote logging stack.
          Instructions for doing so can be found at
          https://docs.docker.com/datacenter/ucp/1.1/configuration/configure-logs/.
          The logging stack can subsequently be used to interpolate the
          information defined by this control from the logged audit records.
    standard_key: NIST-800-53

  - control_key: AU-5
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          Universal Control Plane can be configured to log data to a remote
          logging stack, which in turn, sends the Docker Trusted Registry
          backend container audit records to the remote logging stack.
          Instructions for doing so can be found at
          https://docs.docker.com/datacenter/ucp/1.1/configuration/configure-logs/.
          The logging stack can subsequently be configured to alert individuals
          in the event of log processing failures.
    standard_key: NIST-800-53

  - control_key: AU-7
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - key: a
        text: |
          Universal Control Plane can be configured to log data to a remote
          logging stack, which in turn, sends the Docker Trusted Registry
          backend container audit records to the remote logging stack.
          Instructions for doing so can be found at
          https://docs.docker.com/datacenter/ucp/1.1/configuration/configure-logs/.
          The logging stack can subsequently be used to facilitate the audit
          reduction and report generation requirements of this control.
      - key: b
        text: |
          The underlying operating system chosen to support Docker Trusted
          Registry should be certified to ensure that logs are not altered
          during generation and transmission to a remote logging stack.
    standard_key: NIST-800-53
  
  - control_key: AU-7 (1)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          Universal Control Plane can be configured to log data to a remote
          logging stack, which in turn, sends the Docker Trusted Registry
          backend container audit records to the remote logging stack.
          Instructions for doing so can be found at
          https://docs.docker.com/datacenter/ucp/1.1/configuration/configure-logs/.
          The logging stack can subsequently be configured to parse information
          by organization-defined audit fields.
    standard_key: NIST-800-53

  - control_key: AU-8
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - configured by customer
    narrative:
      - key: a
        text: |
          Docker Trusted Registry uses the system clock of the underlying
          operating system on which it runs. This behavior cannot be modified.
      - key: b
        text: |
          The underlying operating system on which Docker Trusted Registry runs
          should be configured such that its system clock uses Coordinated
          Universal Time (UTC) as indicated by this control. Refer to the
          operating system's instructions for doing so.
    standard_key: NIST-800-53

  - control_key: AU-8 (1)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - key: a
        text: |
          The underlying operating system on which Docker Trusted Registry runs
          should be configured such that its system clock compares itself with
          an authoritative time source as indicated by this control. This can be
          accomplished by utilizing the Network Time Protocol (NTP). Refer to
          the operating system's instructions for doing so.
      - key: b
        text: |
          The underlying operating system on which Docker Trusted Registry runs
          should be configured such that its system clock synchronizes itself to
          an authoritative time source as defined by part (a) of this control
          any time the time difference exceeds that of the organization-defined
          time period. This can be accomplished by utilizing the Network Time
          Protocol (NTP). Refer to the operating system's instructions for doing
          so.
    standard_key: NIST-800-53

  - control_key: AU-9
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          By default, Docker Trusted Registry is configured to use the
          underlying logging capabilities of CS Docker Engine. As such, on the
          underlying Linux operating system, only root and sudo users and users
          that have been added to the 'docker' group have the ability to access
          the logs generated by UCP backend service containers. In addition,
          only UCP Administrator users can change the logging endpoint of the
          system should it be decided that logs be sent to a remote logging
          stack. In this case, the organization is responsible for configuring
          the remote logging stack per the provisions of this control.
    standard_key: NIST-800-53

  - control_key: AU-9 (2)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          Docker Trusted Registry resides as an Application on a Universal
          Control Plane cluster, and as such, can be configured to send logs to
          a remote logging stack per the instructions at
          https://docs.docker.com/datacenter/ucp/1.1/configuration/configure-logs/.
          This logging stack can subsequently be configured to back up audit
          records per the schedule defined by this control.
    standard_key: NIST-800-53

  - control_key: AU-11
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          Docker Trusted Registry resides as an Application on a Universal
          Control Plane cluster, and as such, can be configured to send logs to
          a remote logging stack per the instructions at
          https://docs.docker.com/datacenter/ucp/1.1/configuration/configure-logs/.
          This logging stack can subsequently be configured retain logs for the
          duration required by this control.
    standard_key: NIST-800-53

  - control_key: AU-12
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - key: a
        text: |
          All of the event types indicated by AU-2 a. are logged by a
          combination of the backend services within Universal Control Plane and
          Docker Trusted Registry. Instructions for viewing this data can be
          found at
          https://docs.docker.com/datacenter/dtr/2.0/monitor-troubleshoot/.

          The underlying Linux operating system supporting DTR can be configured
          to audit Docker-specific events with the auditd daemon. Refer to the
          specific Linux distribution in use for instructions on configuring
          this service.
      - key: b
        text: |
          Using auditd on the Linux operating system supporting DTR, the
          organization can configure audit rules to select which Docker-specific
          events are to be audited. Refer to the specific Linux distribution in
          use for instructions on configuring this service.
    standard_key: NIST-800-53

  - control_key: CM-5 (3)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          Docker Content Trust is a capability provided by CS Docker Engine that
          enforces client-side signing and verification of Docker image tags. It
          provides the ability to use digital signatures for data sent to and
          received from Docker Trusted Registry and the public Docker Store.
          These signatures allow client-side verification of the integrity and
          publisher of specific image tags. All Docker Trusted Registry Docker
          images are officially signed and verified by Docker, Inc.

          When installing Docker Trusted Registry, you should enable Docker
          Content Trust (per the instructions at
          https://docs.docker.com/engine/security/trust/content_trust/) and
          subsequently pull the the signed DTR image tag.
    standard_key: NIST-800-53

  - control_key: CM-6 (1)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          The organization can incorporate the use of an external configuration
          management system to meet the requirements of this control.
    standard_key: NIST-800-53

  - control_key: CM-7 (2)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          The organization can define a list of allowed base Docker images and
          make them available via Docker Trusted Registry. The organization must
          also prevent users from being able to pull Docker images from
          untrusted sources.
    standard_key: NIST-800-53

  - control_key: CM-7 (5)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - key: a
        text: |
          The organization can define a list of allowed base Docker images and
          make them available via Docker Trusted Registry. The organization must
          also prevent users from being able to pull Docker images from
          untrusted sources.
      - key: b
        text: |
         The organization can configure its systems to ensure that only approved Docker images are stored in Docker Trusted Registry. This can be accomplished by using Docker Content Trust to sign Docker images which can subsequently be stored in Docker Trusted Registry
    standard_key: NIST-800-53

  - control_key: CM-11
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - key: b
        text: |
          The organization can define a list of allowed base Docker images and
          make them available via Docker Trusted Registry. The organization must
          also prevent users from being able to pull Docker images from
          untrusted sources.
    standard_key: NIST-800-53

  - control_key: IA-2
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          Docker Trusted Registry and Universal Control Plane share the same
          backend identity service. DTR can be configured to identify and
          authenticate users via Universal Control Plane's integrated support
          for LDAP. Users and groups managed within the organization's LDAP
          directory service (e.g. Active Directory) can be synchronized to DTR
          on a regular interval. When a user is removed from the LDAP-backed
          directory, that user becomes inactive within DTR. In addition, DTR
          teams can be mapped to groups synchronized via LDAP. When a user is
          added/removed to/from the LDAP group, that same user is automatically
          added/removed to/from the DTR team. Instructions for configuring LDAP
          integration can be found at
          https://docs.docker.com/datacenter/ucp/2.0/guides/configuration/integrate-with-ldap/.
    standard_key: NIST-800-53

  - control_key: IA-2 (2)
    covered_by: []
    implementation_statuses:
      - planned
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          Docker Trusted Registry does not support multifactor authentication.
          This is planned for a future release of the product.
    standard_key: NIST-800-53

  - control_key: IA-2 (5)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          Docker Trusted Registry requires individual users to be authenticated
          in order to gain access to the system. Any permissions granted to the
          team(s) that which the user is a member are subsequently applied.
    standard_key: NIST-800-53

  - control_key: IA-2 (8)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          Docker Trusted Registry integrates with LDAP for authenticating users
          to an external directory service. You should configure your external
          directory service for ensuring that you are protected against replay
          attacks.
    standard_key: NIST-800-53

  - control_key: IA-2 (11)
    covered_by: []
    implementation_statuses:
      - planned
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          Multifactor authentication support is planned for a future release of
          Docker Trusted Registry.
    standard_key: NIST-800-53

  - control_key: IA-2 (12)
    covered_by: []
    implementation_statuses:
      - planned
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          Security Assertion Markup Language (SAML) support is planned for a
          future release of Docker Trusted Registry. This, in turn, can enable
          personal identity verification (PIV)/common access card (CAC)
          authentication.
    standard_key: NIST-800-53

  - control_key: IA-3
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          Docker Trusted Registry replicas reside on Universal Control Plane
          worker nodes (virtual machines). In order for UCP worker nodes to join
          a Universal Control Plane cluster, they must be identified and
          authenticated via a worker token. Additional Docker Trusted Registry
          replicas can only be added after a UCP administrator user has
          authenticated in to the UCP cluster and when mutual TLS authentication
          between the UCP worker and manager nodes has been established.
          Reference documentation can be found at
          https://docs.docker.com/datacenter/dtr/2.1/guides/install/#/step-7-join-replicas-to-the-cluster.
    standard_key: NIST-800-53

  - control_key: IA-4
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - key: c
        text: |
          An external directory service integrated with Docker Trusted Registry
          via LDAP can be configured to prevent the reuse of user identifiers
          for a specified period of time. Refer to your directory service's
          documentation for configuring this.
      - key: d
        text: |
          An external directory service integrated with Docker Trusted Registry
          via LDAP can be configured to prevent the reuse of user identifiers
          for a specified period of time. Refer to your directory service's
          documentation for configuring this.
      - key: e
        text: |
          An external directory service integrated with Docker Trusted Registry
          via LDAP can be configured to prevent the reuse of user identifiers
          for a specified period of time. Refer to your directory service's
          documentation for configuring this.
    standard_key: NIST-800-53

  - control_key: IA-4 (4)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          An external directory service integrated with Docker Trusted Registry
          via LDAP can be configured to uniquely identify each individual
          according to the requirements of this control. Refer to your directory
          service's documentation for configuring this.
    standard_key: NIST-800-53
  
  - control_key: IA-5
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - key: b
        text: |
          An external directory service integrated with Docker Trusted Registry
          via LDAP can be configured to establish initial authenticator content
          according to the requirements of this control. Refer to your directory
          service's documentation for configuring this.
      - key: c
        text: |
          An external directory service integrated with Docker Trusted Registry
          via LDAP can be configured to enforce strength requirements for
          authenticators according to the requirements of this control. Refer to
          your directory service's documentation for configuring this.
      - key: d
        text: |
          An external directory service integrated with Docker Trusted Registry
          via LDAP can be configured to distribute, redistribute, and revoke
          authenticators according to the requirements of this control. Refer to
          your directory service's documentation for configuring this.
      - key: e
        text: |
          An external directory service integrated with Docker Trusted Registry
          via LDAP can be configured to change default authenticator content
          according to the requirements of this control. Refer to your directory
          service's documentation for configuring this.
      - key: f
        text: |
          An external directory service integrated with Docker Trusted Registry
          via LDAP can be configured to set minimum and maximum lifetime
          restrictions and reuse conditions for authenticators according to the
          requirements of this control. Refer to your directory service's
          documentation for configuring this.
      - key: g
        text: |
          An external directory service integrated with Docker Trusted Registry
          via LDAP can be configured to refresh authenticators at a regular
          cadence according to the requirements of this control. Refer to your
          directory service's documentation for configuring this.
      - key: h
        text: |
          An external directory service integrated with Docker Trusted Registry
          via LDAP can be configured to protect authenticator content from
          unauthorized disclosure or modification according to the requirements
          of this control. Refer to your directory service's documentation for
          configuring this.
      - key: i
        text: |
          An external directory service integrated with Docker Trusted Registry
          via LDAP can be configured to implement specific security safeguards
          to protect authentications according to the requirements of this
          control. Refer to your directory service's documentation for
          configuring this.
      - key: j
        text: |
          An external directory service integrated with Docker Trusted Registry
          via LDAP can be configured to change authenticators for group or role
          accounts when membership to those groups or roles changes  according
          to the requirements of this control. Refer to your directory service's
          documentation for configuring this.
    standard_key: NIST-800-53

  - control_key: IA-5 (1)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - key: a
        text: |
          An external directory service integrated with Docker Trusted Registry
          via LDAP can be configured to change authenticators for group or role
          accounts when membership to those groups or roles changes  according
          to the requirements of this control. Refer to your directory service's
          documentation for configuring this.
      - key: b
        text: |
          An external directory service integrated with Docker Trusted Registry
          via LDAP can be configured to enforce the requirement to change at
          least one character when changing passwords according to the
          requirements of this control. Refer to your directory service's
          documentation for configuring this.
      - key: c
        text: |
          An external directory service integrated with Docker Trusted Registry
          via LDAP can be configured to store and transmit cryptographically
          protected passwords according to the requirements of this control.
          Refer to your directory service's documentation for configuring this.
      - key: d
        text: |
          An external directory service integrated with Docker Trusted Registry
          via LDAP can be configured to enforce the required minimum and maximum
          lifetime restrictions according to the requirements of this control.
          Refer to your directory service's documentation for configuring this.
      - key: e
        text: |
          An external directory service integrated with Docker Trusted Registry
          via LDAP can be configured to enforce the required number of
          generations before password reuse according to the requirements of
          this control. Refer to your directory service's documentation for
          configuring this.
      - key: f
        text: |
          An external directory service integrated with Docker Trusted Registry
          via LDAP can be configured to enforce the requirement to change
          initial/temporary passwords upon first login according to the
          requirements of this control. Refer to your directory service's
          documentation for configuring this.
    standard_key: NIST-800-53

  - control_key: IA-5 (2)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - key: a
        text: |
          Docker Trusted Registry includes a Docker volume which holds the root
          key material for the DTR root CA that issues certificats. In addition
          Universal Control Plane contains two, built-in root certificate
          authorities. One CA is used for signing client bundles generated by
          users. The other CA is used for TLS communication between UCP cluster
          nodes. Should you choose to use certificates signed by an external CA,
          in order to successfully authenticate in to the system, those
          certificates must include a root CA public certificate, a service
          certificate and any intermediate CA public certificates (in addition
          to SANs for all addresses used to reach the UCP controller), and a
          private key for the server. When adding DTR replicas, the UCP nodes on
          which they're installed are authenticated to the cluster via the
          appropriate built-in CA.
      - key: b
        text: |
          Access to Docker Trusted Registry is only granted when a user has a
          valid certificate bundle. This is enforced with the public/private key
          pair included with the user's certificate bundle in Universal Control
          Plane.
      - key: c
        text: |
          Only after a client bundle has been generated or an existing public
          key has been added for a particular user is that user able to execute
          commands against Docker Trusted Registry. This bundle maps the
          authenticated identity to that of the user's profile in Universal
          Control Plane.
      - key: d
        text: |
          When a client bundle has been generated or an existing public key has
          been added for a particular Universal Control Plane user which
          subsequently grants that user access to Docker Trusted Registry, it is
          attached to that user's Universal Control Plane profile. Bundles/keys
          can be revoked by an Administrator or the user themselves. The
          cluster's internal certificates can also be revoked and updated.
          Instructions for doing so can be found at
          https://docs.docker.com/datacenter/ucp/2.0/guides/configuration/#/replace-the-server-certificates.
          In addition, Docker Trusted Registry's server certificates can be
          replaced by following the instructions at
          https://docs.docker.com/datacenter/dtr/2.1/guides/configure/.
    standard_key: NIST-800-53

  - control_key: IA-5 (4)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          An external directory service integrated with Docker Trusted Registry
          via LDAP can be configured with automation to ensure that password
          authenticators meet strength requirements as defined by this control.
          Refer to your directory service's documentation for configuring this.
    standard_key: NIST-800-53

  - control_key: IA-5 (6)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          An external directory service integrated with Dcoker Trusted Registry
          via LDAP can be configured to protect authenticators as required by
          this control. Refer to your directory service's documentation for
          configuring this.
    standard_key: NIST-800-53

  - control_key: IA-6
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          Docker Trusted Registry obscures all feedback of authentication
          information during the authentication process. This includes both
          authentication via the web UI and the CLI.
    standard_key: NIST-800-53

  - control_key: IA-7
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          All access to Docker Trusted Registry is protected with Transport
          Layer Security (TLS) 1.2. This includes both SSH access to the
          individual UCP nodes and CLI-/web-based access to the UCP management
          functions with mutual TLS and HTTPS respectively.
    standard_key: NIST-800-53

  - control_key: IA-8
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          Users managed by Docker Trusted Registry can be grouped per the
          requirements of the organization and as defined by this control. This
          can include groupings for non-organizational users.
    standard_key: NIST-800-53

  - control_key: IA-8 (1)
    covered_by: []
    implementation_statuses:
      - planned
    control_origins:
      - service provider system specific
    narrative:
      - text: |
         Security Assertion Markup Language (SAML) support is planned for a
         future release of Docker Trusted Registry. This, in turn, can enable
         personal identity verification (PIV) authentication of users from other
         federal agencies.
    standard_key: NIST-800-53

  - control_key: IA-8 (2)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          An external directory service integrated with Docker Trusted Registry
          via LDAP can be configured to meet the FICAM requirements as indicated
          by this control. Refer to your directory service's documentation for
          configuring this.
    standard_key: NIST-800-53

  - control_key: IA-8 (3)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          An external directory service integrated with Docker Trusted Registry
          via LDAP can be configured to meet the FICAM requirements as indicated
          by this control. Refer to your directory service's documentation for
          configuring this.
    standard_key: NIST-800-53

  - control_key: IA-8 (4)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          An external directory service integrated with Docker Trusted Registry
          via LDAP can be configured to meet the FICAM requirements as indicated
          by this control. Refer to your directory service's documentation for
          configuring this.
    standard_key: NIST-800-53

  - control_key: RA-5 (1)
    covered_by: []
    implementation_statuses:
      - planned
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          The Docker Security Scanning tool allows for the scanning of Docker
          images against the Common Vulnerabilities and Exposures (CVE)
          dictionary. This tool will be introduced in to Docker Trusted Registry
          in a future release.
    standard_key: NIST-800-53

  - control_key: RA-5 (3)
    covered_by: []
    implementation_statuses:
      - planned
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          The Docker Security Scanning tool allows for the scanning of Docker
          images against the Common Vulnerabilities and Exposures (CVE)
          dictionary. This tool will be introduced in to Docker Trusted Registry
          in a future release.
    standard_key: NIST-800-53

  - control_key: SA-10 (1)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          Docker Content Trust gives you the ability to verify both the
          integrity and the publisher of all the data received from a Docker
          Trusted Registry over any channel. It allows operations with a remote
          DTR instance to enforce client-side signing and verification of image
          tags. It provides for the ability to use digital signatures for data
          sent to and receive from remote DTR instances. These signatures allow
          client-side verification of the integrity and publisher of specific
          image tags. Docker Trusted Registry includes an integrated imaging
          signing service.
    standard_key: NIST-800-53
  
  - control_key: SC-2
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          Docker Trusted Registry is made up of a number of backend services
          that provide for both user functionality (including user interface
          services) and system management functionality. Each of these services
          operates independently of one another. A description of these services
          can be found at
          https://docs.docker.com/datacenter/dtr/2.1/guides/architecture/.
    standard_key: NIST-800-53

  - control_key: SC-23
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          All remote access sessions to Docker Trusted Registry are protected
          with Transport Layer Security (TLS) 1.2. This is included at both the
          HTTPS application layer for access to the DTR user interface and for
          command-line based connections to the registry. In addition to this,
          all communication to DTR is enforced by way of two-way mutual TLS
          authentication.
    standard_key: NIST-800-53

  - control_key: SC-28 (1)
    covered_by: []
    implementation_statuses:
      - complete
    control_origins:
      - service provider system specific
    narrative:
      - text: |
          All remote access sessions to Docker Trusted Registry are protected
          with Transport Layer Security (TLS) 1.2. This is included at both the
          HTTPS application layer for access to the DTR user interface and for
          command-line based connections to the registry. In addition to this,
          all communication to DTR is enforced by way of two-way mutual TLS
          authentication.
    standard_key: NIST-800-53